{
    "if": {
        "prefix": "if",
        "body": [
            "if ${1:condition}:",
            "\t${2:pass}",
            "#endif"
        ],
        "description": "Code snippet for the if statement."
    },
    "if/else": {
        "prefix": "ifelse",
        "body": [
            "if ${1:condition}:",
            "\t${2:pass}",
            "else:",
            "\t${3:pass}",
            "#endif"
        ],
        "description": "Code snippet for the if statement with else."
    },
    "elif": {
        "prefix": "elif",
        "body": [
            "elif ${1:condition}:",
            "\t${2:pass}"
        ],
        "description": "Code snippet for the elif statement."
    },
    "else": {
        "prefix": "else",
        "body": [
            "else:",
            "\t${1:pass}"
        ],
        "description": "Code snippet for the else statement."
    },
    "for": {
        "prefix": "for",
        "body": [
            "for ${1:value} in ${2:iterator}:",
            "\t${3:pass}",
            "#endfor"
        ],
        "description": "Code snippet for the for statement."
    },
    "fori": {
        "prefix": "fori",
        "body": [
            "for ${1:index}, ${2:value} in enumerate(${3:iterator}):",
            "\t${4:pass}",
            "#endfor"
        ],
        "description": "Code snippet for the fori statement."
    },
    "while": {
        "prefix": "while",
        "body": [
            "while ${1:condition}:",
            "\t${2:pass}",
            "#endwhile"
        ],
        "description": "Code snippet for the while statement."
    },
    "with": {
        "prefix": "with",
        "body": [
            "with ${1:object}:",
            "\t${2:pass}",
            "#endwith"
        ],
        "description": "Code snippet for the with statement."
    },
    "async/with": {
        "prefix": "awith",
        "body": [
            "async with ${1:object}:",
            "\t${2:pass}",
            "#endawirh"
        ],
        "description": "Code snippet for the async with statement."
    },
    "match": {
        "prefix": "match",
        "body": [
            "match ${1:term}:",
            "\tcase ${2:pattern}:",
            "\t\t${3:pass}",
            "\t#endcase",
            "#endmatch"
        ],
        "description": "Code snippet match the if statement."
    },
    "case": {
        "prefix": "case",
        "body": [
            "case ${1:pattern}:",
            "\t${2:pass}",
            "#endcase"
        ],
        "description": "Code snippet for the case statement."
    },
    "def": {
        "prefix": "def",
        "body": [
            "def ${1:name}($2) -> ${3:type}:",
            "\t\"\"\" ${4:doc.}\"\"\"\n",
            "\t${5:pass}",
            "#enddef"
        ],
        "description": "Code snippet for the def statement."
    },
    "async/def": {
        "prefix": "adef",
        "body": [
            "async def ${1:name}($2) -> ${3:type}:",
            "\t\"\"\" ${4:doc.}\"\"\"\n",
            "\t${5:pass}",
            "#endadef"
        ],
        "description": "Code snippet for the async def statement."
    },
    "class": {
        "prefix": "class",
        "body": [
            "class ${1:name}:",
            "\t\"\"\" ${2:doc.}\"\"\"\n",
            "\t${3:pass}",
            "#endclass"
        ],
        "description": "Code snippet for the class statement."
    },
    "ifmain": {
        "prefix": "ifmain",
        "body": [
            "if __name__ == \"__main__\":",
            "\t${1:pass}",
            "#endif"
        ],
        "description": "Code snippet for the main statement."
    },
    "pprint": {
        "prefix": "pprint",
        "body": "__import__(\"pprint\").pprint($1)",
        "description": "Code snippet for the pprint statement."
    },
    "pyright/ignore": {
        "prefix": "pyignore",
        "body": "# pyright: ignore",
        "description": "Code snippet for the pyright ignore statement."
    }
}
