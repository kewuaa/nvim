[+]
cc=gcc
cxx=g++
cflags=
cxflags=
cxxflags=
pcflags=

[file-run]
command="$(VIM_FILEPATH)"
command:c,cpp,pascal,rust="$(VIM_PATHNOEXT)"
command:python=uv run "$(VIM_FILEPATH)"
command:zig=zig run "$(VIM_FILEPATH)"
command:dart=dart run "$(VIM_FILEPATH)"
command:fsharp=dotnet fsi "$(VIM_FILEPATH)"
command:cs=dotnet script "$(VIM_FILEPATH)"
command:javascript=node "$(VIM_FILEPATH)"
command:lua=nvim -l "$(VIM_FILEPATH)"
command:typst/linux=xdg-open $(VIM_PATHNOEXT).pdf
command:typst/win32=explorer $(VIM_PATHNOEXT).pdf
cwd=<root>
output=terminal

[file-build:debug]
command:c=$(+cc) -g -Wall "$(VIM_FILEPATH)" -o "$(VIM_PATHNOEXT)$(+exe_suffix)" $(+cxflags) $(+cflags)
command:cpp=$(+cxx) -g -Wall "$(VIM_FILEPATH)" -o "$(VIM_PATHNOEXT)$(+exe_suffix)" $(+cxflags) $(+cxxflags)
command:cython=cython -3 $(+cython_target:--cplus) -a $(VIM_FILEPATH) && explorer $(VIM_PATHNOEXT).html
command:zig=zig build-exe "$(VIM_FILEPATH)"
command:dart=dart compile exe "$(VIM_FILEPATH)" -o "$(VIM_PATHNOEXT)$(+exe_suffix)"
command:pascal=fpc -gw -gh -gl $(+pcflags) "$(VIM_FILEPATH)"
command:rust=rustc -g -o "$(VIM_PATHNOEXT)"$(+exe_suffix) "$(VIM_FILEPATH)"
command:make=make -f "$(VIM_FILEPATH)"
command:typst=typst compile $(VIM_FILEPATH)
cwd=<root>
output=terminal

[file-build:release]
command:c=$(+cc) -O3 -Wall "$(VIM_FILEPATH)" -o "$(VIM_PATHNOEXT)$(+exe_suffix)" $(+cxflags) $(+cflags)
command:cpp=$(+cxx) -O3 -Wall "$(VIM_FILEPATH)" -o "$(VIM_PATHNOEXT)$(+exe_suffix)" $(+cxflags) $(+cxxflags)
command:zig=zig build-exe -O ReleaseSafe "$(VIM_FILEPATH)"
command:dart=dart compile exe "$(VIM_FILEPATH)" -o "$(VIM_PATHNOEXT)$(+exe_suffix)"
command:pascal=fpc -O3 $(+pcflags) "$(VIM_FILEPATH)"
command:rust=rustc -o "$(VIM_PATHNOEXT)"$(+exe_suffix) -C opt-level=3 "$(VIM_FILEPATH)"
cwd=<root>
output=terminal

[file-debug]
command:python=uv run python -m pdb "$(VIM_FILEPATH)"
command:c,cpp=gdb "$(VIM_PATHNOEXT)"
cwd=<root>
output=terminal

[project-run]
command:c,cpp,pascal=cd <root> && xmake run
command:zig=zig build run
command:dart=flutter run
command:cs,fsharp=dotnet run
command:rust=RUST_TRACEBACK=full cargo run
cwd=<root>
output=terminal

[project-build]
command:c,cpp,pascal=cd <root> && xmake -v
command:zig=zig build $(-step:install)
command:dart=flutter build
command:cs,fsharp=dotnet build
command:rust=cargo build
cwd=<root>
output=terminal

[generate-project-file]
command=XMAKE_COLORTERM=nocolor xmake project -k compile_commands --lsp=clangd
cwd=<root>

[run-test]
command:python=uv run python -m pytest <root>/tests
command:zig=zig build test
command:rust=cargo test
cwd=<root>

[typst-preview]
command:typst=tinymist preview --root <root> $(VIM_FILEPATH)
cwd=<root>
output=terminal

[open-terminal]
command/linux=cd <root> && $SHELL
command/win32=cd <root> && where clink >nul 2>nul && if %errorlevel% equ 0 (cmd.exe /k clink inject) else (cmd.exe)
cwd=<root>
output=terminal
pos=TAB

[git-commit]
command=git commit -m "$(-message:update)"
cwd=<root>

[git-push]
command=git push $(-remote:origin) $(-local:master)
cwd=<root>

[git-checkout]
command=git checkout -- $(-file:.)
cwd=<root>

[git-reset]
command=git reset --$(-mode:&mixed,&soft,&hard) $(-commit-hash:HEAD)
cwd=<root>

[git-log]
command=git $(-type:&reflog,&log)
cwd=<root>
